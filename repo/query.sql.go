// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package repo

import (
	"context"
	"database/sql"
)

const createCredentials = `-- name: CreateCredentials :exec
INSERT INTO credentials (id, user_id, password) VALUES($1,$2,crypt($3,'crypt-des'))
`

type CreateCredentialsParams struct {
	ID     string
	UserID string
	Crypt  string
}

func (q *Queries) CreateCredentials(ctx context.Context, arg CreateCredentialsParams) error {
	_, err := q.db.ExecContext(ctx, createCredentials, arg.ID, arg.UserID, arg.Crypt)
	return err
}

const createUser = `-- name: CreateUser :one
INSERT INTO users (id, username, date_of_birth, parent_code) VALUES ($1, $2, $3, $4) RETURNING id
`

type CreateUserParams struct {
	ID          string
	Username    string
	DateOfBirth sql.NullTime
	ParentCode  string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (string, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.ID,
		arg.Username,
		arg.DateOfBirth,
		arg.ParentCode,
	)
	var id string
	err := row.Scan(&id)
	return id, err
}
